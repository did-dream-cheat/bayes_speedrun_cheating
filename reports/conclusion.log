Traceback (most recent call last):
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/hjhornbeck/.local/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, (ax1,ax2) = plt.subplots(nrows=1, ncols=2, figsize=(8, 4), dpi=dpi, facecolor='w', edgecolor='k')

i = 0       # allow for copy-paste code
p = 'benex'


# Blaze rods first
r_fair = Fraction(1,2)
priors = [prior( r_fair, scale ) for scale in [Fraction(4,3), 4, 12]]

count = len(blaze_rods[p])
x     = np.arange(1, count+1)
sum_n = np.cumsum( blaze_rods[p]['n'] )
sum_k = np.cumsum( blaze_rods[p]['k'] )

# p-values 
y = [1 - binom.cdf( sum_k[i], sum_n[i], r_blaze ) for i in range(count)]
ax1.plot( x, y, '-r', label="blaze rods" )

# my Bayes factor
y = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[1]) for i in range(count)]
ax2.plot( x, y, '-r' )
    
y_low = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[0]) for i in range(count)]
y_hig = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[2]) for i in range(count)]
ax2.fill_between( x, [float(v) for v in y_low], [float(v) for v in y_hig], \
                     alpha=0.2, color='r' )


# Ender pearls
r_fair = Fraction(20, 423)
priors = [prior( r_fair, scale ) for scale in [Fraction(4,3), 4, 12]]

count = len(bartering[p])
x     = np.arange(1, count+1)
sum_n = np.cumsum( bartering[p]['n'] )
sum_k = np.cumsum( bartering[p]['k'] )

# p-values
y = [1 - binom.cdf( sum_k[i], sum_n[i], r_pearl ) for i in range(count)]
ax1.plot( x, y, '-b' )
glue( 'benex_pval_12', y[11], display=False )

# my Bayes factor
y = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[1]) for i in range(count)]
ax2.plot( x, y, '-b', label="pearl barters" )
glue( 'benex_bf_12', float(y[11]), display=False )

y_low = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[0]) for i in range(count)]
y_hig = [BF_H_fair_H_cheat(sum_k[i], sum_n[i], r_fair, *priors[2]) for i in range(count)]
ax2.fill_between( x, [float(v) for v in y_low], [float(v) for v in y_hig], \
                     alpha=0.2, color='b' )


# add the trimmings to both charts
x = range( 1, max(len(blaze_rods[p]), len(bartering[p])) )
ax1.plot( x, [0.05 for v in x], '--k', label='p = 0.05' )
ax1.plot( x, [0.001 for v in x], '--k', label='p = 0.001' )

ax2.plot( x, [19 for v in x], '--k', label='19:1' )
ax2.plot( x, [1 for v in x], '--k', label='break even' )

          
ax1.set_xlabel("run")
ax1.set_xticks([1,len(blaze_rods['benex']),len(bartering['benex'])])
ax1.set_ylabel('p-value')
ax1.set_yscale("log")

ax2.set_xlabel("run")
ax2.set_xticks([1,len(blaze_rods['benex']),len(bartering['benex'])])
ax2.set_ylabel('H_fair / H_cheat')
ax2.set_yscale("log")

ax1.legend()
ax2.legend()
          
fig_show( fig, 'fig:benex_both' )
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-6-b85abe410851>[0m in [0;36m<module>[0;34m[0m
[1;32m     15[0m [0;34m[0m[0m
[1;32m     16[0m [0;31m# p-values[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 17[0;31m [0my[0m [0;34m=[0m [0;34m[[0m[0;36m1[0m [0;34m-[0m [0mbinom[0m[0;34m.[0m[0mcdf[0m[0;34m([0m [0msum_k[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0msum_n[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mr_blaze[0m [0;34m)[0m [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mcount[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m [0max1[0m[0;34m.[0m[0mplot[0m[0;34m([0m [0mx[0m[0;34m,[0m [0my[0m[0;34m,[0m [0;34m'-r'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m"blaze rods"[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     19[0m [0;34m[0m[0m

[0;32m<ipython-input-6-b85abe410851>[0m in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m     15[0m [0;34m[0m[0m
[1;32m     16[0m [0;31m# p-values[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 17[0;31m [0my[0m [0;34m=[0m [0;34m[[0m[0;36m1[0m [0;34m-[0m [0mbinom[0m[0;34m.[0m[0mcdf[0m[0;34m([0m [0msum_k[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0msum_n[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mr_blaze[0m [0;34m)[0m [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mcount[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m [0max1[0m[0;34m.[0m[0mplot[0m[0;34m([0m [0mx[0m[0;34m,[0m [0my[0m[0;34m,[0m [0;34m'-r'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m"blaze rods"[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     19[0m [0;34m[0m[0m

[0;31mNameError[0m: name 'r_blaze' is not defined
NameError: name 'r_blaze' is not defined

